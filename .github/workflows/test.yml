---
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    types: [synchronize]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # if  github.event.pull_request.labels[0].name != 'bug'
    if: ${{ !contains(github.event.head_commit.message, 'dependabot[bot] <support@github.com>') }}

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: create a file
        run: |
          DATE=`date +"%Y%m%d"`
          mkdir build
          touch build/v$DATE
          ls -la build
      
      - name: Does cd carry from line to line
        run: |
          pwd
          cd ..
          pwd
          cd .. && pwd

      - name: does background work?
        run: |
          date && sleep 30 && date &

      - name: does background work accross steps?
        run: |
          date && sleep 1 && date && sleep 1 && date && sleep 1 && date

      #- name: tag the commit
      #  run: |
      #    DATE=`date +"%Y%m%d%H%M%S"`
      #    git config --global user.email Eric.Joanis@nrc-cnrc.gc.ca
      #    git config --global user.name "Eric Joanis via GitHub Actions"
      #    git tag -a -m "Tagging commit $DATE" commit$DATE
      #    git push origin commit$DATE

      - name: Are rules sequential and contextual
        run: ls -la build

      - name: Test if stops at first error
        run: |
          echo Before
          #false
          echo After, this should not get printed. Well, it will be printed since I commented out false
          echo The false above caused the CI workflow to be considered to have failed, as desired.

      # Find out some repo information
      - name: Talk to me
        run: git show

      - name: display the full GitHub context
        env:
          context: ${{ toJson(github) }}
        run: echo "$context"

      - name: Create a var
        id: create-a-var
        run: echo "MY_VAR=$(uname -a)" >> $GITHUB_OUTPUT

      - name: Use a var
        run: echo "MY_VAR=${{ steps.create-a-var.outputs.MY_VAR }}"

      - name: env var
        #run: echo "SOME_VAR=$(cat .SOME_VAR)" >> $GITHUB_ENV
        run: cat .SOME_VAR >> $GITHUB_ENV

      - name: use env var
        run: |
          echo "SOME_VAR: $SOME_VAR"
          env

      - name: Git describe tests
        run: |
          git describe
          git describe --tags

  reuser:
    uses: ./.github/workflows/reusable.yml
    with:
      my-arg: top level reuser
    
  step-reuser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/reusable.yml
        continue-on-error: true
        with:
          my-arg: step level reuser

  windows-var:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: set an env var from file
        shell: bash
        run: cat .SOME_VAR >> $GITHUB_ENV
      - name: use an env var
        shell: bash
        run: |
          echo "SOME_VAR=$SOME_VAR"
          env

  build-editd:
    runs-on: windows-latest
    shell: bash
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
      - run: pip install editdistance
      - run: find /c/users/RUNNER~1
